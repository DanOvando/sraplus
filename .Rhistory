10/10000
devtools::use_mit_license()
usethis::use_mit_license()
options(usethis.full_name = "Dan Ovando")
usethis::use_mit_license()
library(sraplus)
srapluy
sraplus::rcpparma_hello_world()
library(sraplus)
sraplus::timesTwo(2)
sraplus::timesTwo(6)
usethis::use_package("TMB")
library(sraplus)
sraplus::sraplus()
usethis::use_testthat()
usethis::use_vignette()
usethis::use_vignette(name = "sraplus")
use_roxygen_md()
library(usethis)
use_roxygen_md()
load("~/research/sofia-plus/data/Return.Rdata")
FishLifeData <- Return
library(usethis)
?usethis::use_data
usethis::use_data(FishLifeData, internal = TRUE)
unlist
library(sraplus)
tibble
usethis::use_package("dplyr")
usethis::use_package("purrr")
usethis::use_package("stringr")
usethis::use_package("FishLife")
?usethis::use_dev_package
usethis::use_dev_package("FishLife")
library(sraplus)
devtools::document()
devtools::document()
library(sraplus)
rm(FishLifeData)
library(sraplus)
example_taxa <- "Gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:10),
years = seq(1:10))
library(sraplus)
map
usethis::use_pipe()
?use_pipe
library(sraplus)
c(1:4) %>% sum()
library(sraplus)
c(1:4) %>% sum()
source('~/github/sraplus/R/utils-pipe.R')
devtools::document()
library(sraplus)
c(1:4) %>% sum()
c(1:4) %>% sum()
library(sraplus)
example_taxa <- "Gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:10),
years = seq(1:10))
library(sraplus)
example_taxa <- "Gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:10),
years = seq(1:10))
driors$terminal_b
example_taxa <- "Gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:25),
years = seq(1:25))
example_taxa <- "gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:25),
years = seq(1:25))
library(sraplus)
example_taxa <- "gadus morhua"
driors <- sraplus::format_driors(taxa = example_taxa,
catch = seq(1:25),
years = seq(1:25))
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sraplus)
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
index = cod$index,
index_years = cod$year,
initial_b = 0.5,
terminal_b = 0.5)
tmb_fit <- fit_sraplus(driors = driors, use_sir = FALSE,
model = "sraplus_tmb")
View(sra_data)
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
library(sraplus)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sraplus)
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
index = cod$index,
index_years = cod$year,
initial_b = 0.5,
terminal_b = 0.5)
tmb_fit <- fit_sraplus(driors = driors, use_sir = FALSE,
model = "sraplus_tmb")
View(sra_data)
View(sra_data)
which(driors$index_years %in% driors$years)
sra_data <- list(
catch_t = driors$catch,
index_t = driors$index,
index_years = which(driors$index_years %in% driors$years),
log_r_prior = log(driors$growth_rate),
log_r_cv = driors$growth_rate_cv,
log_init_dep_prior = log(driors$initial_b),
log_init_dep_cv = driors$initial_b_cv,
log_final_dep_prior = log(driors$terminal_b),
log_final_dep_cv = driors$terminal_b_cv,
time = time,
fit_index = as.numeric(!all(is.na(driors$index))),
use_u_prior = as.numeric(!all(is.na(driors$u_v_umsy))),
u_years = which(driors$u_years %in% driors$years),
u_priors = driors$u_v_umsy,
u_cv = driors$u_cv,
plim = plim,
sigma_proc_prior = driors$sigma_r/2,
sigma_proc_prior_cv = driors$sigma_r_cv,
ref_type = ifelse(driors$ref_type == "k", 0,1),
use_final = !is.na(driors$terminal_b),
use_final_u = as.numeric(!all(is.na(driors$log_final_u))),
log_final_u = driors$log_final_u,
log_final_u_cv = driors$log_final_u_cv,
use_init =  !is.na(driors$initial_b),
sigma_u = driors$u_cv,
log_k_guess = log(10 * max(driors$catch)),
f_cv = driors$f_cv
)
View(sra_data)
sra_data$index_years
sra_data[["index_years"]]
sra_data[["index_years"]] %>% plot()
sra_model <-
TMB::MakeADFun(
data = sra_data,
parameters = inits,
DLL = model,
random = randos,
silent = TRUE,
inner.control=list(maxit=1e3),
hessian=FALSE,
map = knockout
)
lower = rep(-Inf,length(sra_model$par)) %>%
set_names(names(sra_model$par))
lower = rep(-Inf,length(sra_model$par)) %>%
purrr::set_names(names(sra_model$par))
lower['log_k'] <- lower_k
upper = rep(Inf,length(sra_model$par)) %>%
purrr::set_names(names(sra_model$par))
upper['log_k'] <- upper_k
upper["log_init_dep"] <- log(1.5)
set.seed(seed)
fit <- TMBhelper::Optimize(
sra_model,
fn = sra_model$fn,
gr = sra_model$gr,
newtonsteps = 3,
lower = lower,
upper = upper,
getsd = FALSE,
control = list(
eval.max = 1e3,
iter.max = 1e3,
rel.tol = 1e-10
)
)
fit <- TMBhelper::Optimize(
sra_model,
fn = sra_model$fn,
gr = sra_model$gr,
newtonsteps = 10,
lower = lower,
upper = upper,
getsd = FALSE,
control = list(
eval.max = 1e3,
iter.max = 1e3,
rel.tol = 1e-10
)
)
sra_model$report()
fit_report <- fit_save$report()
fit_save <- sra_model
fit_report <- fit_save$report()
fit_sd_report <- TMB::sdreport(fit_save, bias.correct = TRUE)
out <-
dlpyr::tibble(
variable = names(fit_sd_report$value),
mean = fit_sd_report$value,
sd = fit_sd_report$sd
)
usethis::use_package("TMBhelper")
devtools::document()
library(sraplus)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sraplus)
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
index = cod$index,
index_years = cod$year,
initial_b = 0.5,
terminal_b = 0.5)
tmb_fit <- fit_sraplus(driors = driors, use_sir = FALSE,
model = "sraplus_tmb")
library(sraplus)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sraplus)
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
index = cod$index,
index_years = cod$year,
initial_b = 0.5,
terminal_b = 0.5)
tmb_fit <- fit_sraplus(driors = driors, use_sir = FALSE,
model = "sraplus_tmb")
tmb_fit$results %>%
ggplot(aes(seq_along(mean), mean, color = variable)) +
geom_line() +
facet_wrap(~variable, scales = "free_y")
library(tidyverse)
tmb_fit$results %>%
ggplot(aes(seq_along(mean), mean, color = variable)) +
geom_line() +
facet_wrap(~variable, scales = "free_y")
tmb_fit$results$variable %>% unique()
tmb_fit$results %>%
filter(variable %in% c("index_hat_t")) %>%
ggplot(aes(seq_along(mean), mean, color = variable)) +
geom_line() +
facet_wrap(~variable, scales = "free_y")
tmb_fit$results %>%
filter(variable %in% c("index_hat_t")) %>%
ggplot() +
geom_line(aes(seq_along(mean), mean, color = variable)) +
geom_point(data = cod, aes(seq_along(index), index), size = 2) +
facet_wrap(~variable, scales = "free_y")
?TMBstan
?tmbstan
library(tmbstan)
?tmbstan
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
source('~/github/sraplus/R/fit-sraplus.R')
usethis::use_package("tmbstan")
devtools::document()
library(sraplus)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(sraplus)
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
index = cod$index,
index_years = cod$year,
initial_b = 0.5,
terminal_b = 0.5)
tmb_fit <- fit_sraplus(driors = driors, use_sir = FALSE,
model = "sraplus_tmb")
test <- tmbstan::tmbstan(sra_model, lower = lower, upper = upper)
rstanarm::launch_shinystan(test)
class(test)
runExample("simple")
fit <- tmbstan(obj, chains=1)
class(fit)  ## "stanfit"
## The available methods are
methods(class="stanfit")
## Not run:
## Pairs plot
pairs(fit, pars=names(obj$par))
## End(Not run)
## Trace plot
traceplot(fit, pars=names(obj$par), inc_warmup=TRUE)
runExample("simple")
library(TMB)
runExample("simple")
obj
tmbstan::runExample("simple")
TMB::runExample()
TMB::runExample("simple")
fit <- tmbstan(obj, chains=1)
class(fit)  ## "stanfit"
obj
methods(class="stanfit")
?tmbstan
usethis::use_testthat()
test_check("sraplus")
library(testthat)
library(sraplus)
test_check("sraplus")
?usethis::use_testthat
use_test("test-fishlife")
usethis::use_test("test-fishlife")
usethis::use_test("fishlife")
devtools::test()
source('~/github/sraplus/R/format-driors.R')
source('~/github/sraplus/R/format-driors.R')
source('~/github/sraplus/R/format-driors.R')
format_driors()
sraplus::format_driors(taxa = "asdf")
genus_species <-
"gadus morhua" %>% stringr::str_split(" ", simplify = TRUE)
genus_species
genus_species <-
"gadus morhua" %>% stringr::str_split(" ", simplify = TRUE)
fish_search <-
FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2])
fish_search
class(fish_search)
genus_species <-
"gasdf" %>% stringr::str_split(" ", simplify = TRUE)
fish_search <-
FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2])
fish_search <-
safely(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]))
fish_search
genus_species <-
"gadus morhua" %>% stringr::str_split(" ", simplify = TRUE)
fish_search <-
(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]))
fish_search <-
tryCatch(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]))
genus_species <-
"gasdf" %>% stringr::str_split(" ", simplify = TRUE)
fish_search <-
tryCatch(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]))
fish_search
rm(fish_search)
fish_search <-
tryCatch(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]))
safely_search <- tryCatch(FishLife::Search_species)
fish_search <-
safely_search(Genus = genus_species[1], Species = genus_species[2]))
fish_search <-
safely_search(Genus = genus_species[1], Species = genus_species[2])
fish_search
?tryCatch
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
e <- simpleError("test error")
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
tryCatch((e), error = function(e) e, finally = print("Hello"))
tryCatch(1, finally = print("Hello"))
tryCatch(1, finally = print("that"))
stop(e)
tryCatch(stop(e), finally = print("Hello"))
tryCatch(stop("fred"), finally = print("Hello"))
tryCatch(stop(e), error = function(e) e, finally = print("Hello"))
demo(error.catching)
?try
try(stop(r))
try(stop(e))
e
set.seed(123)
x <- stats::rnorm(50)
doit <- function(x)
{
x <- sample(x, replace = TRUE)
if(length(unique(x)) > 30) mean(x)
else stop("too few unique points")
}
res <- lapply(1:100, function(i) try(doit(x), TRUE))
res
safely_search <- try(FishLife::Search_species, TRUE)
fish_search <-
safely_search(Genus = genus_species[1], Species = genus_species[2])
fish_search
safely_search <- try(FishLife::Search_species, TRUE)
safely_search
safely_search(Genus = genus_species[1], Species = genus_species[2])
safely_search <- purrr::safely(FishLife::Search_species, TRUE)
fish_search <-
purrr::safely_search(Genus = genus_species[1], Species = genus_species[2])
fish_search <-
safely_search(Genus = genus_species[1], Species = genus_species[2])
fish_search
try(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]), TRUE)
fish_search <-
try(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]), TRUE)
fish_search
class(fish_search)
genus_species <-
"gadus morhua" %>% stringr::str_split(" ", simplify = TRUE)
safely_search <- purrr::safely(FishLife::Search_species, TRUE)
genus_species <-
"gadus morhua" %>% stringr::str_split(" ", simplify = TRUE)
fish_search <-
try(FishLife::Search_species(Genus = genus_species[1], Species = genus_species[2]), TRUE)
expect_is(fish_search,"list")
class(fish_search)
usethis::use_test("sir")
example_taxa <- "gadus morhua"
data(cod)
driors <- format_driors(taxa = example_taxa,
catch = cod$catch,
years = cod$year,
initial_b = 1,
terminal_b = 0.5)
sir_fit <- fit_sraplus(driors = driors, use_sir = TRUE,
draws = 100)
sir_fit
sir_fit <- try(fit_sraplus(driors = driors, use_sir = TRUE,
draws = 100),TRUE)
sir_fit
class(sir_fit)
devtools::test()
usethis::use_test("tmb")
sraplus::get_tmb_model()
?expect
library(testhar)
library(sraplus)
sraplus::get_tmb_model()
library(testthat)
?expect_message()
try(sraplus::get_tmb_model(),TRUE)
try(sraplus::get_tmb_model(model_name = "adsf"),TRUE)
source('~/github/sraplus/R/get_tmb_model.R')
source('~/github/sraplus/R/get_tmb_model.R')
source('~/github/sraplus/R/get_tmb_model.R')
source('~/github/sraplus/R/get_tmb_model.R')
get_tmb_model(model_name = "adsf")
a <- try(sraplus::get_tmb_model(model_name = "adsf"),TRUE)
a
class(a)
a <- try(sraplus::get_tmb_model(model_name = "sraplus_tmb"),TRUE)
a
class(a)
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::check()
devtools::document()
devtools::check()
Rcpp::compileAttributes()
Rcpp::compileAttributes()
